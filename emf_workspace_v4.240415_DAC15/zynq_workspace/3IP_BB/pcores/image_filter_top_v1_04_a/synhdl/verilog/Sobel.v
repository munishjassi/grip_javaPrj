// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.1 (Debug Build)
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Sobel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_rows_V_read,
        src_cols_V_read,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read,
        src_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n,
        src_data_stream_2_V_read,
        dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n,
        dst_data_stream_0_V_write,
        dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n,
        dst_data_stream_1_V_write,
        dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n,
        dst_data_stream_2_V_write
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] src_rows_V_read;
input  [11:0] src_cols_V_read;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
input  [7:0] src_data_stream_1_V_dout;
input   src_data_stream_1_V_empty_n;
output   src_data_stream_1_V_read;
input  [7:0] src_data_stream_2_V_dout;
input   src_data_stream_2_V_empty_n;
output   src_data_stream_2_V_read;
output  [7:0] dst_data_stream_0_V_din;
input   dst_data_stream_0_V_full_n;
output   dst_data_stream_0_V_write;
output  [7:0] dst_data_stream_1_V_din;
input   dst_data_stream_1_V_full_n;
output   dst_data_stream_1_V_write;
output  [7:0] dst_data_stream_2_V_din;
input   dst_data_stream_2_V_full_n;
output   dst_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_0_V_read;
reg src_data_stream_1_V_read;
reg src_data_stream_2_V_read;
reg dst_data_stream_0_V_write;
reg dst_data_stream_1_V_write;
reg dst_data_stream_2_V_write;
reg    ap_done_reg = 1'b0;
reg   [0:0] ap_CS_fsm = 1'b0;
reg    ap_sig_bdd_52;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_idle;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_ready;
wire   [7:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_dout;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_empty_n;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_read;
wire   [7:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_dout;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_empty_n;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_read;
wire   [7:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_dout;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_empty_n;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_read;
wire   [7:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_din;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_full_n;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_write;
wire   [7:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_din;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_full_n;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_write;
wire   [7:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_din;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_full_n;
wire    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_write;
wire   [11:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_rows;
wire   [11:0] grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_cols;
reg    grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg = 1'b0;
reg   [0:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 1'b0;
parameter    ap_ST_st2_fsm_1 = 1'b1;
parameter    ap_true = 1'b1;


filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start ),
    .ap_done( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done ),
    .ap_idle( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_idle ),
    .ap_ready( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_ready ),
    .p_src_data_stream_0_V_dout( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_read ),
    .p_dst_data_stream_0_V_din( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_din ),
    .p_dst_data_stream_0_V_full_n( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_full_n ),
    .p_dst_data_stream_0_V_write( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_write ),
    .p_dst_data_stream_1_V_din( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_din ),
    .p_dst_data_stream_1_V_full_n( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_full_n ),
    .p_dst_data_stream_1_V_write( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_write ),
    .p_dst_data_stream_2_V_din( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_din ),
    .p_dst_data_stream_2_V_full_n( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_full_n ),
    .p_dst_data_stream_2_V_write( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_write ),
    .rows( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_rows ),
    .cols( grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_cols )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st1_fsm_0 == ap_CS_fsm) & ~ap_sig_bdd_52)) begin
            grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_ready)) begin
            grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// dst_data_stream_0_V_write assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_write)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        dst_data_stream_0_V_write = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_write;
    end else begin
        dst_data_stream_0_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_1_V_write assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_write)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        dst_data_stream_1_V_write = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_write;
    end else begin
        dst_data_stream_1_V_write = ap_const_logic_0;
    end
end

/// dst_data_stream_2_V_write assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_write)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        dst_data_stream_2_V_write = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_write;
    end else begin
        dst_data_stream_2_V_write = ap_const_logic_0;
    end
end

/// src_data_stream_0_V_read assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_read)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        src_data_stream_0_V_read = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_read;
    end else begin
        src_data_stream_0_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_1_V_read assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_read)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        src_data_stream_1_V_read = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_read;
    end else begin
        src_data_stream_1_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_2_V_read assign process. ///
always @ (ap_CS_fsm or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_read)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        src_data_stream_2_V_read = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_read;
    end else begin
        src_data_stream_2_V_read = ap_const_logic_0;
    end
end
always @ (ap_CS_fsm or ap_sig_bdd_52 or grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~ap_sig_bdd_52) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            if (~(ap_const_logic_0 == grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_52 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_52 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end
assign dst_data_stream_0_V_din = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_din;
assign dst_data_stream_1_V_din = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_din;
assign dst_data_stream_2_V_din = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_din;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start = grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_ap_start_ap_start_reg;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_cols = src_cols_V_read;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_0_V_full_n = dst_data_stream_0_V_full_n;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_1_V_full_n = dst_data_stream_1_V_full_n;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_dst_data_stream_2_V_full_n = dst_data_stream_2_V_full_n;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_dout = src_data_stream_0_V_dout;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_0_V_empty_n = src_data_stream_0_V_empty_n;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_dout = src_data_stream_1_V_dout;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_1_V_empty_n = src_data_stream_1_V_empty_n;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_dout = src_data_stream_2_V_dout;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_p_src_data_stream_2_V_empty_n = src_data_stream_2_V_empty_n;
assign grp_filter_opr_filter2d_kernel_16_16_int_int_1080_1920_3_3_s_fu_49_rows = src_rows_V_read;


endmodule //Sobel

