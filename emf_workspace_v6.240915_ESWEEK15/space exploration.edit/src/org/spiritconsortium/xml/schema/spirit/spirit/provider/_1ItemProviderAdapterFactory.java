/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.spiritconsortium.xml.schema.spirit.spirit.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.spiritconsortium.xml.schema.spirit.spirit.util._1AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class _1ItemProviderAdapterFactory extends _1AdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public _1ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractionDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractionDefinitionTypeItemProvider abstractionDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractionDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractionDefinitionTypeAdapter() {
		if (abstractionDefinitionTypeItemProvider == null) {
			abstractionDefinitionTypeItemProvider = new AbstractionDefinitionTypeItemProvider(this);
		}

		return abstractionDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractionDefPortConstraintsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractionDefPortConstraintsTypeItemProvider abstractionDefPortConstraintsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractionDefPortConstraintsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractionDefPortConstraintsTypeAdapter() {
		if (abstractionDefPortConstraintsTypeItemProvider == null) {
			abstractionDefPortConstraintsTypeItemProvider = new AbstractionDefPortConstraintsTypeItemProvider(this);
		}

		return abstractionDefPortConstraintsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorBusInterfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorBusInterfaceTypeItemProvider abstractorBusInterfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorBusInterfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorBusInterfaceTypeAdapter() {
		if (abstractorBusInterfaceTypeItemProvider == null) {
			abstractorBusInterfaceTypeItemProvider = new AbstractorBusInterfaceTypeItemProvider(this);
		}

		return abstractorBusInterfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorGeneratorsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorGeneratorsTypeItemProvider abstractorGeneratorsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorGeneratorsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorGeneratorsTypeAdapter() {
		if (abstractorGeneratorsTypeItemProvider == null) {
			abstractorGeneratorsTypeItemProvider = new AbstractorGeneratorsTypeItemProvider(this);
		}

		return abstractorGeneratorsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorInterfacesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorInterfacesTypeItemProvider abstractorInterfacesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorInterfacesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorInterfacesTypeAdapter() {
		if (abstractorInterfacesTypeItemProvider == null) {
			abstractorInterfacesTypeItemProvider = new AbstractorInterfacesTypeItemProvider(this);
		}

		return abstractorInterfacesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorModelTypeItemProvider abstractorModelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorModelTypeAdapter() {
		if (abstractorModelTypeItemProvider == null) {
			abstractorModelTypeItemProvider = new AbstractorModelTypeItemProvider(this);
		}

		return abstractorModelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorModeType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorModeType1ItemProvider abstractorModeType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorModeType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorModeType1Adapter() {
		if (abstractorModeType1ItemProvider == null) {
			abstractorModeType1ItemProvider = new AbstractorModeType1ItemProvider(this);
		}

		return abstractorModeType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorPortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorPortTypeItemProvider abstractorPortTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorPortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorPortTypeAdapter() {
		if (abstractorPortTypeItemProvider == null) {
			abstractorPortTypeItemProvider = new AbstractorPortTypeItemProvider(this);
		}

		return abstractorPortTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorPortWireType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorPortWireTypeItemProvider abstractorPortWireTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorPortWireType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorPortWireTypeAdapter() {
		if (abstractorPortWireTypeItemProvider == null) {
			abstractorPortWireTypeItemProvider = new AbstractorPortWireTypeItemProvider(this);
		}

		return abstractorPortWireTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorsTypeItemProvider abstractorsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorsTypeAdapter() {
		if (abstractorsTypeItemProvider == null) {
			abstractorsTypeItemProvider = new AbstractorsTypeItemProvider(this);
		}

		return abstractorsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorTypeItemProvider abstractorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorTypeAdapter() {
		if (abstractorTypeItemProvider == null) {
			abstractorTypeItemProvider = new AbstractorTypeItemProvider(this);
		}

		return abstractorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorType1ItemProvider abstractorType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorType1Adapter() {
		if (abstractorType1ItemProvider == null) {
			abstractorType1ItemProvider = new AbstractorType1ItemProvider(this);
		}

		return abstractorType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorViewType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractorViewTypeItemProvider abstractorViewTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AbstractorViewType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAbstractorViewTypeAdapter() {
		if (abstractorViewTypeItemProvider == null) {
			abstractorViewTypeItemProvider = new AbstractorViewTypeItemProvider(this);
		}

		return abstractorViewTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressBankType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressBankTypeItemProvider addressBankTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressBankType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddressBankTypeAdapter() {
		if (addressBankTypeItemProvider == null) {
			addressBankTypeItemProvider = new AddressBankTypeItemProvider(this);
		}

		return addressBankTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressBlockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressBlockTypeItemProvider addressBlockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressBlockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddressBlockTypeAdapter() {
		if (addressBlockTypeItemProvider == null) {
			addressBlockTypeItemProvider = new AddressBlockTypeItemProvider(this);
		}

		return addressBlockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressOffsetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressOffsetTypeItemProvider addressOffsetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressOffsetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddressOffsetTypeAdapter() {
		if (addressOffsetTypeItemProvider == null) {
			addressOffsetTypeItemProvider = new AddressOffsetTypeItemProvider(this);
		}

		return addressOffsetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressSpaceRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpaceRefTypeItemProvider addressSpaceRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressSpaceRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddressSpaceRefTypeAdapter() {
		if (addressSpaceRefTypeItemProvider == null) {
			addressSpaceRefTypeItemProvider = new AddressSpaceRefTypeItemProvider(this);
		}

		return addressSpaceRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressSpacesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpacesTypeItemProvider addressSpacesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressSpacesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddressSpacesTypeAdapter() {
		if (addressSpacesTypeItemProvider == null) {
			addressSpacesTypeItemProvider = new AddressSpacesTypeItemProvider(this);
		}

		return addressSpacesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressSpaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddressSpaceTypeItemProvider addressSpaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddressSpaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddressSpaceTypeAdapter() {
		if (addressSpaceTypeItemProvider == null) {
			addressSpaceTypeItemProvider = new AddressSpaceTypeItemProvider(this);
		}

		return addressSpaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AddrSpaceRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AddrSpaceRefTypeItemProvider addrSpaceRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AddrSpaceRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAddrSpaceRefTypeAdapter() {
		if (addrSpaceRefTypeItemProvider == null) {
			addrSpaceRefTypeItemProvider = new AddrSpaceRefTypeItemProvider(this);
		}

		return addrSpaceRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AdHocConnectionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdHocConnectionsTypeItemProvider adHocConnectionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AdHocConnectionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAdHocConnectionsTypeAdapter() {
		if (adHocConnectionsTypeItemProvider == null) {
			adHocConnectionsTypeItemProvider = new AdHocConnectionsTypeItemProvider(this);
		}

		return adHocConnectionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AdHocConnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdHocConnectionTypeItemProvider adHocConnectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AdHocConnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAdHocConnectionTypeAdapter() {
		if (adHocConnectionTypeItemProvider == null) {
			adHocConnectionTypeItemProvider = new AdHocConnectionTypeItemProvider(this);
		}

		return adHocConnectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AlternateGroupsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlternateGroupsTypeItemProvider alternateGroupsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AlternateGroupsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAlternateGroupsTypeAdapter() {
		if (alternateGroupsTypeItemProvider == null) {
			alternateGroupsTypeItemProvider = new AlternateGroupsTypeItemProvider(this);
		}

		return alternateGroupsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AlternateRegistersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlternateRegistersTypeItemProvider alternateRegistersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AlternateRegistersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAlternateRegistersTypeAdapter() {
		if (alternateRegistersTypeItemProvider == null) {
			alternateRegistersTypeItemProvider = new AlternateRegistersTypeItemProvider(this);
		}

		return alternateRegistersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.AlternateRegisterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlternateRegisterTypeItemProvider alternateRegisterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.AlternateRegisterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createAlternateRegisterTypeAdapter() {
		if (alternateRegisterTypeItemProvider == null) {
			alternateRegisterTypeItemProvider = new AlternateRegisterTypeItemProvider(this);
		}

		return alternateRegisterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ArgumentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentTypeItemProvider argumentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ArgumentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArgumentTypeAdapter() {
		if (argumentTypeItemProvider == null) {
			argumentTypeItemProvider = new ArgumentTypeItemProvider(this);
		}

		return argumentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BankedBankType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BankedBankTypeItemProvider bankedBankTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BankedBankType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBankedBankTypeAdapter() {
		if (bankedBankTypeItemProvider == null) {
			bankedBankTypeItemProvider = new BankedBankTypeItemProvider(this);
		}

		return bankedBankTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BankedBlockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BankedBlockTypeItemProvider bankedBlockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BankedBlockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBankedBlockTypeAdapter() {
		if (bankedBlockTypeItemProvider == null) {
			bankedBlockTypeItemProvider = new BankedBlockTypeItemProvider(this);
		}

		return bankedBlockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BankedSubspaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BankedSubspaceTypeItemProvider bankedSubspaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BankedSubspaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBankedSubspaceTypeAdapter() {
		if (bankedSubspaceTypeItemProvider == null) {
			bankedSubspaceTypeItemProvider = new BankedSubspaceTypeItemProvider(this);
		}

		return bankedSubspaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BaseAddressesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseAddressesTypeItemProvider baseAddressesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BaseAddressesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBaseAddressesTypeAdapter() {
		if (baseAddressesTypeItemProvider == null) {
			baseAddressesTypeItemProvider = new BaseAddressesTypeItemProvider(this);
		}

		return baseAddressesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BaseAddressType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseAddressTypeItemProvider baseAddressTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BaseAddressType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBaseAddressTypeAdapter() {
		if (baseAddressTypeItemProvider == null) {
			baseAddressTypeItemProvider = new BaseAddressTypeItemProvider(this);
		}

		return baseAddressTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BaseAddressType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseAddressType1ItemProvider baseAddressType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BaseAddressType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBaseAddressType1Adapter() {
		if (baseAddressType1ItemProvider == null) {
			baseAddressType1ItemProvider = new BaseAddressType1ItemProvider(this);
		}

		return baseAddressType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BitSteeringType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BitSteeringType1ItemProvider bitSteeringType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BitSteeringType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBitSteeringType1Adapter() {
		if (bitSteeringType1ItemProvider == null) {
			bitSteeringType1ItemProvider = new BitSteeringType1ItemProvider(this);
		}

		return bitSteeringType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BitWidthType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BitWidthTypeItemProvider bitWidthTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BitWidthType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBitWidthTypeAdapter() {
		if (bitWidthTypeItemProvider == null) {
			bitWidthTypeItemProvider = new BitWidthTypeItemProvider(this);
		}

		return bitWidthTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BridgeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BridgeTypeItemProvider bridgeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BridgeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBridgeTypeAdapter() {
		if (bridgeTypeItemProvider == null) {
			bridgeTypeItemProvider = new BridgeTypeItemProvider(this);
		}

		return bridgeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BuildCommandType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuildCommandTypeItemProvider buildCommandTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BuildCommandType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBuildCommandTypeAdapter() {
		if (buildCommandTypeItemProvider == null) {
			buildCommandTypeItemProvider = new BuildCommandTypeItemProvider(this);
		}

		return buildCommandTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BusDefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusDefinitionTypeItemProvider busDefinitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BusDefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBusDefinitionTypeAdapter() {
		if (busDefinitionTypeItemProvider == null) {
			busDefinitionTypeItemProvider = new BusDefinitionTypeItemProvider(this);
		}

		return busDefinitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BusInterfacesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusInterfacesTypeItemProvider busInterfacesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BusInterfacesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBusInterfacesTypeAdapter() {
		if (busInterfacesTypeItemProvider == null) {
			busInterfacesTypeItemProvider = new BusInterfacesTypeItemProvider(this);
		}

		return busInterfacesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.BusInterfaceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusInterfaceTypeItemProvider busInterfaceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.BusInterfaceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createBusInterfaceTypeAdapter() {
		if (busInterfaceTypeItemProvider == null) {
			busInterfaceTypeItemProvider = new BusInterfaceTypeItemProvider(this);
		}

		return busInterfaceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CellClassType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CellClassTypeItemProvider cellClassTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CellClassType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCellClassTypeAdapter() {
		if (cellClassTypeItemProvider == null) {
			cellClassTypeItemProvider = new CellClassTypeItemProvider(this);
		}

		return cellClassTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CellFunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CellFunctionTypeItemProvider cellFunctionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CellFunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCellFunctionTypeAdapter() {
		if (cellFunctionTypeItemProvider == null) {
			cellFunctionTypeItemProvider = new CellFunctionTypeItemProvider(this);
		}

		return cellFunctionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CellSpecificationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CellSpecificationTypeItemProvider cellSpecificationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CellSpecificationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCellSpecificationTypeAdapter() {
		if (cellSpecificationTypeItemProvider == null) {
			cellSpecificationTypeItemProvider = new CellSpecificationTypeItemProvider(this);
		}

		return cellSpecificationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ChannelsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChannelsTypeItemProvider channelsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ChannelsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChannelsTypeAdapter() {
		if (channelsTypeItemProvider == null) {
			channelsTypeItemProvider = new ChannelsTypeItemProvider(this);
		}

		return channelsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ChannelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChannelTypeItemProvider channelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ChannelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChannelTypeAdapter() {
		if (channelTypeItemProvider == null) {
			channelTypeItemProvider = new ChannelTypeItemProvider(this);
		}

		return channelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ChoicesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoicesTypeItemProvider choicesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ChoicesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChoicesTypeAdapter() {
		if (choicesTypeItemProvider == null) {
			choicesTypeItemProvider = new ChoicesTypeItemProvider(this);
		}

		return choicesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ChoiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceTypeItemProvider choiceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ChoiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createChoiceTypeAdapter() {
		if (choiceTypeItemProvider == null) {
			choiceTypeItemProvider = new ChoiceTypeItemProvider(this);
		}

		return choiceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockDriverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockDriverTypeItemProvider clockDriverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockDriverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createClockDriverTypeAdapter() {
		if (clockDriverTypeItemProvider == null) {
			clockDriverTypeItemProvider = new ClockDriverTypeItemProvider(this);
		}

		return clockDriverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockDriverType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockDriverType1ItemProvider clockDriverType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockDriverType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createClockDriverType1Adapter() {
		if (clockDriverType1ItemProvider == null) {
			clockDriverType1ItemProvider = new ClockDriverType1ItemProvider(this);
		}

		return clockDriverType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPeriodType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockPeriodTypeItemProvider clockPeriodTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPeriodType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createClockPeriodTypeAdapter() {
		if (clockPeriodTypeItemProvider == null) {
			clockPeriodTypeItemProvider = new ClockPeriodTypeItemProvider(this);
		}

		return clockPeriodTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPulseDurationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockPulseDurationTypeItemProvider clockPulseDurationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPulseDurationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createClockPulseDurationTypeAdapter() {
		if (clockPulseDurationTypeItemProvider == null) {
			clockPulseDurationTypeItemProvider = new ClockPulseDurationTypeItemProvider(this);
		}

		return clockPulseDurationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPulseOffsetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockPulseOffsetTypeItemProvider clockPulseOffsetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPulseOffsetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createClockPulseOffsetTypeAdapter() {
		if (clockPulseOffsetTypeItemProvider == null) {
			clockPulseOffsetTypeItemProvider = new ClockPulseOffsetTypeItemProvider(this);
		}

		return clockPulseOffsetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPulseValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClockPulseValueTypeItemProvider clockPulseValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ClockPulseValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createClockPulseValueTypeAdapter() {
		if (clockPulseValueTypeItemProvider == null) {
			clockPulseValueTypeItemProvider = new ClockPulseValueTypeItemProvider(this);
		}

		return clockPulseValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandLineSwitchType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandLineSwitchTypeItemProvider commandLineSwitchTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandLineSwitchType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCommandLineSwitchTypeAdapter() {
		if (commandLineSwitchTypeItemProvider == null) {
			commandLineSwitchTypeItemProvider = new CommandLineSwitchTypeItemProvider(this);
		}

		return commandLineSwitchTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandTypeItemProvider commandTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCommandTypeAdapter() {
		if (commandTypeItemProvider == null) {
			commandTypeItemProvider = new CommandTypeItemProvider(this);
		}

		return commandTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandType1ItemProvider commandType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCommandType1Adapter() {
		if (commandType1ItemProvider == null) {
			commandType1ItemProvider = new CommandType1ItemProvider(this);
		}

		return commandType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandType2ItemProvider commandType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CommandType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCommandType2Adapter() {
		if (commandType2ItemProvider == null) {
			commandType2ItemProvider = new CommandType2ItemProvider(this);
		}

		return commandType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentGeneratorsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentGeneratorsTypeItemProvider componentGeneratorsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentGeneratorsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createComponentGeneratorsTypeAdapter() {
		if (componentGeneratorsTypeItemProvider == null) {
			componentGeneratorsTypeItemProvider = new ComponentGeneratorsTypeItemProvider(this);
		}

		return componentGeneratorsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentGeneratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentGeneratorTypeItemProvider componentGeneratorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentGeneratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createComponentGeneratorTypeAdapter() {
		if (componentGeneratorTypeItemProvider == null) {
			componentGeneratorTypeItemProvider = new ComponentGeneratorTypeItemProvider(this);
		}

		return componentGeneratorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentInstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentInstancesTypeItemProvider componentInstancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentInstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createComponentInstancesTypeAdapter() {
		if (componentInstancesTypeItemProvider == null) {
			componentInstancesTypeItemProvider = new ComponentInstancesTypeItemProvider(this);
		}

		return componentInstancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CompAbstraction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentInstanceTypeItemProvider componentInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CompAbstraction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createComponentInstanceTypeAdapter() {
		if (componentInstanceTypeItemProvider == null) {
			componentInstanceTypeItemProvider = new ComponentInstanceTypeItemProvider(this);
		}

		return componentInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentTypeItemProvider componentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ComponentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createComponentTypeAdapter() {
		if (componentTypeItemProvider == null) {
			componentTypeItemProvider = new ComponentTypeItemProvider(this);
		}

		return componentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ConfigurableElementValuesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurableElementValuesTypeItemProvider configurableElementValuesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ConfigurableElementValuesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConfigurableElementValuesTypeAdapter() {
		if (configurableElementValuesTypeItemProvider == null) {
			configurableElementValuesTypeItemProvider = new ConfigurableElementValuesTypeItemProvider(this);
		}

		return configurableElementValuesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ConfigurableElementValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurableElementValueTypeItemProvider configurableElementValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ConfigurableElementValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConfigurableElementValueTypeAdapter() {
		if (configurableElementValueTypeItemProvider == null) {
			configurableElementValueTypeItemProvider = new ConfigurableElementValueTypeItemProvider(this);
		}

		return configurableElementValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ConnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionTypeItemProvider connectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ConnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConnectionTypeAdapter() {
		if (connectionTypeItemProvider == null) {
			connectionTypeItemProvider = new ConnectionTypeItemProvider(this);
		}

		return connectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ConstraintSetsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintSetsTypeItemProvider constraintSetsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ConstraintSetsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConstraintSetsTypeAdapter() {
		if (constraintSetsTypeItemProvider == null) {
			constraintSetsTypeItemProvider = new ConstraintSetsTypeItemProvider(this);
		}

		return constraintSetsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ConstraintSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintSetTypeItemProvider constraintSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ConstraintSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createConstraintSetTypeAdapter() {
		if (constraintSetTypeItemProvider == null) {
			constraintSetTypeItemProvider = new ConstraintSetTypeItemProvider(this);
		}

		return constraintSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CpusType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpusTypeItemProvider cpusTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CpusType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCpusTypeAdapter() {
		if (cpusTypeItemProvider == null) {
			cpusTypeItemProvider = new CpusTypeItemProvider(this);
		}

		return cpusTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.CpuType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CpuTypeItemProvider cpuTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.CpuType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createCpuTypeAdapter() {
		if (cpuTypeItemProvider == null) {
			cpuTypeItemProvider = new CpuTypeItemProvider(this);
		}

		return cpuTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DefaultValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultValueTypeItemProvider defaultValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DefaultValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDefaultValueTypeAdapter() {
		if (defaultValueTypeItemProvider == null) {
			defaultValueTypeItemProvider = new DefaultValueTypeItemProvider(this);
		}

		return defaultValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DesignConfigurationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DesignConfigurationTypeItemProvider designConfigurationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DesignConfigurationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDesignConfigurationTypeAdapter() {
		if (designConfigurationTypeItemProvider == null) {
			designConfigurationTypeItemProvider = new DesignConfigurationTypeItemProvider(this);
		}

		return designConfigurationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DesignType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DesignTypeItemProvider designTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DesignType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDesignTypeAdapter() {
		if (designTypeItemProvider == null) {
			designTypeItemProvider = new DesignTypeItemProvider(this);
		}

		return designTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DisabledType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DisabledTypeItemProvider disabledTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DisabledType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDisabledTypeAdapter() {
		if (disabledTypeItemProvider == null) {
			disabledTypeItemProvider = new DisabledTypeItemProvider(this);
		}

		return disabledTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DriveConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DriveConstraintTypeItemProvider driveConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DriveConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDriveConstraintTypeAdapter() {
		if (driveConstraintTypeItemProvider == null) {
			driveConstraintTypeItemProvider = new DriveConstraintTypeItemProvider(this);
		}

		return driveConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.DriverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DriverTypeItemProvider driverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.DriverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createDriverTypeAdapter() {
		if (driverTypeItemProvider == null) {
			driverTypeItemProvider = new DriverTypeItemProvider(this);
		}

		return driverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.EnableType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnableTypeItemProvider enableTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.EnableType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createEnableTypeAdapter() {
		if (enableTypeItemProvider == null) {
			enableTypeItemProvider = new EnableTypeItemProvider(this);
		}

		return enableTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.EnumeratedValuesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumeratedValuesTypeItemProvider enumeratedValuesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.EnumeratedValuesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createEnumeratedValuesTypeAdapter() {
		if (enumeratedValuesTypeItemProvider == null) {
			enumeratedValuesTypeItemProvider = new EnumeratedValuesTypeItemProvider(this);
		}

		return enumeratedValuesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.EnumeratedValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumeratedValueTypeItemProvider enumeratedValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.EnumeratedValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createEnumeratedValueTypeAdapter() {
		if (enumeratedValueTypeItemProvider == null) {
			enumeratedValueTypeItemProvider = new EnumeratedValueTypeItemProvider(this);
		}

		return enumeratedValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.EnumerationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationTypeItemProvider enumerationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.EnumerationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createEnumerationTypeAdapter() {
		if (enumerationTypeItemProvider == null) {
			enumerationTypeItemProvider = new EnumerationTypeItemProvider(this);
		}

		return enumerationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ExecutableImageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecutableImageTypeItemProvider executableImageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ExecutableImageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createExecutableImageTypeAdapter() {
		if (executableImageTypeItemProvider == null) {
			executableImageTypeItemProvider = new ExecutableImageTypeItemProvider(this);
		}

		return executableImageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ExternalPortReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalPortReferenceTypeItemProvider externalPortReferenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ExternalPortReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createExternalPortReferenceTypeAdapter() {
		if (externalPortReferenceTypeItemProvider == null) {
			externalPortReferenceTypeItemProvider = new ExternalPortReferenceTypeItemProvider(this);
		}

		return externalPortReferenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FieldType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FieldTypeItemProvider fieldTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FieldType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFieldTypeAdapter() {
		if (fieldTypeItemProvider == null) {
			fieldTypeItemProvider = new FieldTypeItemProvider(this);
		}

		return fieldTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileBuilderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileBuilderTypeItemProvider fileBuilderTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileBuilderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileBuilderTypeAdapter() {
		if (fileBuilderTypeItemProvider == null) {
			fileBuilderTypeItemProvider = new FileBuilderTypeItemProvider(this);
		}

		return fileBuilderTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileBuilderType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileBuilderType1ItemProvider fileBuilderType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileBuilderType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileBuilderType1Adapter() {
		if (fileBuilderType1ItemProvider == null) {
			fileBuilderType1ItemProvider = new FileBuilderType1ItemProvider(this);
		}

		return fileBuilderType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetRefGroupType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSetRefGroupTypeItemProvider fileSetRefGroupTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetRefGroupType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileSetRefGroupTypeAdapter() {
		if (fileSetRefGroupTypeItemProvider == null) {
			fileSetRefGroupTypeItemProvider = new FileSetRefGroupTypeItemProvider(this);
		}

		return fileSetRefGroupTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetRefGroupType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSetRefGroupType1ItemProvider fileSetRefGroupType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetRefGroupType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileSetRefGroupType1Adapter() {
		if (fileSetRefGroupType1ItemProvider == null) {
			fileSetRefGroupType1ItemProvider = new FileSetRefGroupType1ItemProvider(this);
		}

		return fileSetRefGroupType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSetRefTypeItemProvider fileSetRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileSetRefTypeAdapter() {
		if (fileSetRefTypeItemProvider == null) {
			fileSetRefTypeItemProvider = new FileSetRefTypeItemProvider(this);
		}

		return fileSetRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSetsTypeItemProvider fileSetsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileSetsTypeAdapter() {
		if (fileSetsTypeItemProvider == null) {
			fileSetsTypeItemProvider = new FileSetsTypeItemProvider(this);
		}

		return fileSetsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileSetTypeItemProvider fileSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileSetTypeAdapter() {
		if (fileSetTypeItemProvider == null) {
			fileSetTypeItemProvider = new FileSetTypeItemProvider(this);
		}

		return fileSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FileTypeItemProvider fileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFileTypeAdapter() {
		if (fileTypeItemProvider == null) {
			fileTypeItemProvider = new FileTypeItemProvider(this);
		}

		return fileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FlagsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlagsTypeItemProvider flagsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FlagsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFlagsTypeAdapter() {
		if (flagsTypeItemProvider == null) {
			flagsTypeItemProvider = new FlagsTypeItemProvider(this);
		}

		return flagsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FlagsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlagsType1ItemProvider flagsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FlagsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFlagsType1Adapter() {
		if (flagsType1ItemProvider == null) {
			flagsType1ItemProvider = new FlagsType1ItemProvider(this);
		}

		return flagsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FlagsType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlagsType2ItemProvider flagsType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FlagsType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFlagsType2Adapter() {
		if (flagsType2ItemProvider == null) {
			flagsType2ItemProvider = new FlagsType2ItemProvider(this);
		}

		return flagsType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.FunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionTypeItemProvider functionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.FunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createFunctionTypeAdapter() {
		if (functionTypeItemProvider == null) {
			functionTypeItemProvider = new FunctionTypeItemProvider(this);
		}

		return functionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorChainConfigurationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratorChainConfigurationTypeItemProvider generatorChainConfigurationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorChainConfigurationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGeneratorChainConfigurationTypeAdapter() {
		if (generatorChainConfigurationTypeItemProvider == null) {
			generatorChainConfigurationTypeItemProvider = new GeneratorChainConfigurationTypeItemProvider(this);
		}

		return generatorChainConfigurationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorChainSelectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratorChainSelectorTypeItemProvider generatorChainSelectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorChainSelectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGeneratorChainSelectorTypeAdapter() {
		if (generatorChainSelectorTypeItemProvider == null) {
			generatorChainSelectorTypeItemProvider = new GeneratorChainSelectorTypeItemProvider(this);
		}

		return generatorChainSelectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorChainType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratorChainTypeItemProvider generatorChainTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorChainType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGeneratorChainTypeAdapter() {
		if (generatorChainTypeItemProvider == null) {
			generatorChainTypeItemProvider = new GeneratorChainTypeItemProvider(this);
		}

		return generatorChainTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorSelectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratorSelectorTypeItemProvider generatorSelectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorSelectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGeneratorSelectorTypeAdapter() {
		if (generatorSelectorTypeItemProvider == null) {
			generatorSelectorTypeItemProvider = new GeneratorSelectorTypeItemProvider(this);
		}

		return generatorSelectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratorTypeItemProvider generatorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGeneratorTypeAdapter() {
		if (generatorTypeItemProvider == null) {
			generatorTypeItemProvider = new GeneratorTypeItemProvider(this);
		}

		return generatorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GeneratorType1ItemProvider generatorType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GeneratorType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGeneratorType1Adapter() {
		if (generatorType1ItemProvider == null) {
			generatorType1ItemProvider = new GeneratorType1ItemProvider(this);
		}

		return generatorType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.GroupSelectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupSelectorTypeItemProvider groupSelectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.GroupSelectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createGroupSelectorTypeAdapter() {
		if (groupSelectorTypeItemProvider == null) {
			groupSelectorTypeItemProvider = new GroupSelectorTypeItemProvider(this);
		}

		return groupSelectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.HierConnectionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HierConnectionsTypeItemProvider hierConnectionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.HierConnectionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createHierConnectionsTypeAdapter() {
		if (hierConnectionsTypeItemProvider == null) {
			hierConnectionsTypeItemProvider = new HierConnectionsTypeItemProvider(this);
		}

		return hierConnectionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.HierConnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HierConnectionTypeItemProvider hierConnectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.HierConnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createHierConnectionTypeAdapter() {
		if (hierConnectionTypeItemProvider == null) {
			hierConnectionTypeItemProvider = new HierConnectionTypeItemProvider(this);
		}

		return hierConnectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.HierInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HierInterfaceItemProvider hierInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.HierInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createHierInterfaceAdapter() {
		if (hierInterfaceItemProvider == null) {
			hierInterfaceItemProvider = new HierInterfaceItemProvider(this);
		}

		return hierInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.InstanceGeneratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceGeneratorTypeItemProvider instanceGeneratorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.InstanceGeneratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInstanceGeneratorTypeAdapter() {
		if (instanceGeneratorTypeItemProvider == null) {
			instanceGeneratorTypeItemProvider = new InstanceGeneratorTypeItemProvider(this);
		}

		return instanceGeneratorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.InterconnectionConfigurationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterconnectionConfigurationTypeItemProvider interconnectionConfigurationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.InterconnectionConfigurationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInterconnectionConfigurationTypeAdapter() {
		if (interconnectionConfigurationTypeItemProvider == null) {
			interconnectionConfigurationTypeItemProvider = new InterconnectionConfigurationTypeItemProvider(this);
		}

		return interconnectionConfigurationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.InterconnectionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterconnectionsTypeItemProvider interconnectionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.InterconnectionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInterconnectionsTypeAdapter() {
		if (interconnectionsTypeItemProvider == null) {
			interconnectionsTypeItemProvider = new InterconnectionsTypeItemProvider(this);
		}

		return interconnectionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.InterconnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterconnectionTypeItemProvider interconnectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.InterconnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInterconnectionTypeAdapter() {
		if (interconnectionTypeItemProvider == null) {
			interconnectionTypeItemProvider = new InterconnectionTypeItemProvider(this);
		}

		return interconnectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.Interface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceItemProvider interfaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.Interface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInterfaceAdapter() {
		if (interfaceItemProvider == null) {
			interfaceItemProvider = new InterfaceItemProvider(this);
		}

		return interfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.InternalPortReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalPortReferenceTypeItemProvider internalPortReferenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.InternalPortReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createInternalPortReferenceTypeAdapter() {
		if (internalPortReferenceTypeItemProvider == null) {
			internalPortReferenceTypeItemProvider = new InternalPortReferenceTypeItemProvider(this);
		}

		return internalPortReferenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.IsIncludeFileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IsIncludeFileTypeItemProvider isIncludeFileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.IsIncludeFileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createIsIncludeFileTypeAdapter() {
		if (isIncludeFileTypeItemProvider == null) {
			isIncludeFileTypeItemProvider = new IsIncludeFileTypeItemProvider(this);
		}

		return isIncludeFileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LanguageToolsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LanguageToolsTypeItemProvider languageToolsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LanguageToolsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLanguageToolsTypeAdapter() {
		if (languageToolsTypeItemProvider == null) {
			languageToolsTypeItemProvider = new LanguageToolsTypeItemProvider(this);
		}

		return languageToolsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LanguageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LanguageTypeItemProvider languageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LanguageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLanguageTypeAdapter() {
		if (languageTypeItemProvider == null) {
			languageTypeItemProvider = new LanguageTypeItemProvider(this);
		}

		return languageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LanguageType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LanguageType1ItemProvider languageType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LanguageType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLanguageType1Adapter() {
		if (languageType1ItemProvider == null) {
			languageType1ItemProvider = new LanguageType1ItemProvider(this);
		}

		return languageType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftTypeItemProvider leftTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLeftTypeAdapter() {
		if (leftTypeItemProvider == null) {
			leftTypeItemProvider = new LeftTypeItemProvider(this);
		}

		return leftTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftType1ItemProvider leftType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLeftType1Adapter() {
		if (leftType1ItemProvider == null) {
			leftType1ItemProvider = new LeftType1ItemProvider(this);
		}

		return leftType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftType2ItemProvider leftType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLeftType2Adapter() {
		if (leftType2ItemProvider == null) {
			leftType2ItemProvider = new LeftType2ItemProvider(this);
		}

		return leftType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType11} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftType11ItemProvider leftType11ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LeftType11}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLeftType11Adapter() {
		if (leftType11ItemProvider == null) {
			leftType11ItemProvider = new LeftType11ItemProvider(this);
		}

		return leftType11ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LibraryRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LibraryRefTypeItemProvider libraryRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LibraryRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLibraryRefTypeAdapter() {
		if (libraryRefTypeItemProvider == null) {
			libraryRefTypeItemProvider = new LibraryRefTypeItemProvider(this);
		}

		return libraryRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LinkerCommandFileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkerCommandFileTypeItemProvider linkerCommandFileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LinkerCommandFileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLinkerCommandFileTypeAdapter() {
		if (linkerCommandFileTypeItemProvider == null) {
			linkerCommandFileTypeItemProvider = new LinkerCommandFileTypeItemProvider(this);
		}

		return linkerCommandFileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LinkerFlagsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkerFlagsTypeItemProvider linkerFlagsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LinkerFlagsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLinkerFlagsTypeAdapter() {
		if (linkerFlagsTypeItemProvider == null) {
			linkerFlagsTypeItemProvider = new LinkerFlagsTypeItemProvider(this);
		}

		return linkerFlagsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LinkerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkerTypeItemProvider linkerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LinkerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLinkerTypeAdapter() {
		if (linkerTypeItemProvider == null) {
			linkerTypeItemProvider = new LinkerTypeItemProvider(this);
		}

		return linkerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LoadConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoadConstraintTypeItemProvider loadConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LoadConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLoadConstraintTypeAdapter() {
		if (loadConstraintTypeItemProvider == null) {
			loadConstraintTypeItemProvider = new LoadConstraintTypeItemProvider(this);
		}

		return loadConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LocalMemoryMapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocalMemoryMapTypeItemProvider localMemoryMapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LocalMemoryMapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLocalMemoryMapTypeAdapter() {
		if (localMemoryMapTypeItemProvider == null) {
			localMemoryMapTypeItemProvider = new LocalMemoryMapTypeItemProvider(this);
		}

		return localMemoryMapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LogicalNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalNameTypeItemProvider logicalNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LogicalNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLogicalNameTypeAdapter() {
		if (logicalNameTypeItemProvider == null) {
			logicalNameTypeItemProvider = new LogicalNameTypeItemProvider(this);
		}

		return logicalNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LogicalPortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalPortTypeItemProvider logicalPortTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LogicalPortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLogicalPortTypeAdapter() {
		if (logicalPortTypeItemProvider == null) {
			logicalPortTypeItemProvider = new LogicalPortTypeItemProvider(this);
		}

		return logicalPortTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.LogicalPortType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalPortType1ItemProvider logicalPortType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.LogicalPortType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createLogicalPortType1Adapter() {
		if (logicalPortType1ItemProvider == null) {
			logicalPortType1ItemProvider = new LogicalPortType1ItemProvider(this);
		}

		return logicalPortType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MaskType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaskTypeItemProvider maskTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MaskType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMaskTypeAdapter() {
		if (maskTypeItemProvider == null) {
			maskTypeItemProvider = new MaskTypeItemProvider(this);
		}

		return maskTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MaskType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaskType1ItemProvider maskType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MaskType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMaskType1Adapter() {
		if (maskType1ItemProvider == null) {
			maskType1ItemProvider = new MaskType1ItemProvider(this);
		}

		return maskType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MasterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MasterTypeItemProvider masterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MasterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMasterTypeAdapter() {
		if (masterTypeItemProvider == null) {
			masterTypeItemProvider = new MasterTypeItemProvider(this);
		}

		return masterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MaximumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaximumTypeItemProvider maximumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MaximumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMaximumTypeAdapter() {
		if (maximumTypeItemProvider == null) {
			maximumTypeItemProvider = new MaximumTypeItemProvider(this);
		}

		return maximumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryMapRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryMapRefTypeItemProvider memoryMapRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryMapRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMemoryMapRefTypeAdapter() {
		if (memoryMapRefTypeItemProvider == null) {
			memoryMapRefTypeItemProvider = new MemoryMapRefTypeItemProvider(this);
		}

		return memoryMapRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryMapsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryMapsTypeItemProvider memoryMapsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryMapsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMemoryMapsTypeAdapter() {
		if (memoryMapsTypeItemProvider == null) {
			memoryMapsTypeItemProvider = new MemoryMapsTypeItemProvider(this);
		}

		return memoryMapsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryMapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryMapTypeItemProvider memoryMapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryMapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMemoryMapTypeAdapter() {
		if (memoryMapTypeItemProvider == null) {
			memoryMapTypeItemProvider = new MemoryMapTypeItemProvider(this);
		}

		return memoryMapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryRemapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MemoryRemapTypeItemProvider memoryRemapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MemoryRemapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMemoryRemapTypeAdapter() {
		if (memoryRemapTypeItemProvider == null) {
			memoryRemapTypeItemProvider = new MemoryRemapTypeItemProvider(this);
		}

		return memoryRemapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MinimumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinimumTypeItemProvider minimumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MinimumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMinimumTypeAdapter() {
		if (minimumTypeItemProvider == null) {
			minimumTypeItemProvider = new MinimumTypeItemProvider(this);
		}

		return minimumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MirroredMasterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MirroredMasterTypeItemProvider mirroredMasterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MirroredMasterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMirroredMasterTypeAdapter() {
		if (mirroredMasterTypeItemProvider == null) {
			mirroredMasterTypeItemProvider = new MirroredMasterTypeItemProvider(this);
		}

		return mirroredMasterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MirroredSlaveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MirroredSlaveTypeItemProvider mirroredSlaveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MirroredSlaveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMirroredSlaveTypeAdapter() {
		if (mirroredSlaveTypeItemProvider == null) {
			mirroredSlaveTypeItemProvider = new MirroredSlaveTypeItemProvider(this);
		}

		return mirroredSlaveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MirroredSystemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MirroredSystemTypeItemProvider mirroredSystemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MirroredSystemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMirroredSystemTypeAdapter() {
		if (mirroredSystemTypeItemProvider == null) {
			mirroredSystemTypeItemProvider = new MirroredSystemTypeItemProvider(this);
		}

		return mirroredSystemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ModelParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelParametersTypeItemProvider modelParametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ModelParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createModelParametersTypeAdapter() {
		if (modelParametersTypeItemProvider == null) {
			modelParametersTypeItemProvider = new ModelParametersTypeItemProvider(this);
		}

		return modelParametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ModelParametersType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelParametersType1ItemProvider modelParametersType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ModelParametersType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createModelParametersType1Adapter() {
		if (modelParametersType1ItemProvider == null) {
			modelParametersType1ItemProvider = new ModelParametersType1ItemProvider(this);
		}

		return modelParametersType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelTypeItemProvider modelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createModelTypeAdapter() {
		if (modelTypeItemProvider == null) {
			modelTypeItemProvider = new ModelTypeItemProvider(this);
		}

		return modelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MonitorInterconnectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MonitorInterconnectionTypeItemProvider monitorInterconnectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MonitorInterconnectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMonitorInterconnectionTypeAdapter() {
		if (monitorInterconnectionTypeItemProvider == null) {
			monitorInterconnectionTypeItemProvider = new MonitorInterconnectionTypeItemProvider(this);
		}

		return monitorInterconnectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.MonitorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MonitorTypeItemProvider monitorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.MonitorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createMonitorTypeAdapter() {
		if (monitorTypeItemProvider == null) {
			monitorTypeItemProvider = new MonitorTypeItemProvider(this);
		}

		return monitorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.NameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameTypeItemProvider nameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.NameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNameTypeAdapter() {
		if (nameTypeItemProvider == null) {
			nameTypeItemProvider = new NameTypeItemProvider(this);
		}

		return nameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.NameType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameType1ItemProvider nameType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.NameType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNameType1Adapter() {
		if (nameType1ItemProvider == null) {
			nameType1ItemProvider = new NameType1ItemProvider(this);
		}

		return nameType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.NameType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameType2ItemProvider nameType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.NameType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNameType2Adapter() {
		if (nameType2ItemProvider == null) {
			nameType2ItemProvider = new NameType2ItemProvider(this);
		}

		return nameType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.NameValuePairType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameValuePairTypeItemProvider nameValuePairTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.NameValuePairType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNameValuePairTypeAdapter() {
		if (nameValuePairTypeItemProvider == null) {
			nameValuePairTypeItemProvider = new NameValuePairTypeItemProvider(this);
		}

		return nameValuePairTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.NameValueTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameValueTypeTypeItemProvider nameValueTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.NameValueTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createNameValueTypeTypeAdapter() {
		if (nameValueTypeTypeItemProvider == null) {
			nameValueTypeTypeItemProvider = new NameValueTypeTypeItemProvider(this);
		}

		return nameValueTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OnMasterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnMasterTypeItemProvider onMasterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OnMasterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOnMasterTypeAdapter() {
		if (onMasterTypeItemProvider == null) {
			onMasterTypeItemProvider = new OnMasterTypeItemProvider(this);
		}

		return onMasterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OnMasterType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnMasterType1ItemProvider onMasterType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OnMasterType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOnMasterType1Adapter() {
		if (onMasterType1ItemProvider == null) {
			onMasterType1ItemProvider = new OnMasterType1ItemProvider(this);
		}

		return onMasterType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSlaveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnSlaveTypeItemProvider onSlaveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSlaveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOnSlaveTypeAdapter() {
		if (onSlaveTypeItemProvider == null) {
			onSlaveTypeItemProvider = new OnSlaveTypeItemProvider(this);
		}

		return onSlaveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSlaveType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnSlaveType1ItemProvider onSlaveType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSlaveType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOnSlaveType1Adapter() {
		if (onSlaveType1ItemProvider == null) {
			onSlaveType1ItemProvider = new OnSlaveType1ItemProvider(this);
		}

		return onSlaveType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSystemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnSystemTypeItemProvider onSystemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSystemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOnSystemTypeAdapter() {
		if (onSystemTypeItemProvider == null) {
			onSystemTypeItemProvider = new OnSystemTypeItemProvider(this);
		}

		return onSystemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSystemType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnSystemType1ItemProvider onSystemType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OnSystemType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOnSystemType1Adapter() {
		if (onSystemType1ItemProvider == null) {
			onSystemType1ItemProvider = new OnSystemType1ItemProvider(this);
		}

		return onSystemType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OtherClockDriverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherClockDriverTypeItemProvider otherClockDriverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OtherClockDriverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOtherClockDriverTypeAdapter() {
		if (otherClockDriverTypeItemProvider == null) {
			otherClockDriverTypeItemProvider = new OtherClockDriverTypeItemProvider(this);
		}

		return otherClockDriverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.OtherClocks} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OtherClocksItemProvider otherClocksItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.OtherClocks}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createOtherClocksAdapter() {
		if (otherClocksItemProvider == null) {
			otherClocksItemProvider = new OtherClocksItemProvider(this);
		}

		return otherClocksItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParametersTypeItemProvider parametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createParametersTypeAdapter() {
		if (parametersTypeItemProvider == null) {
			parametersTypeItemProvider = new ParametersTypeItemProvider(this);
		}

		return parametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ParametersType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParametersType1ItemProvider parametersType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ParametersType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createParametersType1Adapter() {
		if (parametersType1ItemProvider == null) {
			parametersType1ItemProvider = new ParametersType1ItemProvider(this);
		}

		return parametersType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PhaseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhaseTypeItemProvider phaseTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PhaseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPhaseTypeAdapter() {
		if (phaseTypeItemProvider == null) {
			phaseTypeItemProvider = new PhaseTypeItemProvider(this);
		}

		return phaseTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PhysicalPortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalPortTypeItemProvider physicalPortTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PhysicalPortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPhysicalPortTypeAdapter() {
		if (physicalPortTypeItemProvider == null) {
			physicalPortTypeItemProvider = new PhysicalPortTypeItemProvider(this);
		}

		return physicalPortTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PhysicalPortType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalPortType1ItemProvider physicalPortType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PhysicalPortType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPhysicalPortType1Adapter() {
		if (physicalPortType1ItemProvider == null) {
			physicalPortType1ItemProvider = new PhysicalPortType1ItemProvider(this);
		}

		return physicalPortType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortAccessType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortAccessTypeItemProvider portAccessTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortAccessType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortAccessTypeAdapter() {
		if (portAccessTypeItemProvider == null) {
			portAccessTypeItemProvider = new PortAccessTypeItemProvider(this);
		}

		return portAccessTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortDeclarationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortDeclarationTypeItemProvider portDeclarationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortDeclarationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortDeclarationTypeAdapter() {
		if (portDeclarationTypeItemProvider == null) {
			portDeclarationTypeItemProvider = new PortDeclarationTypeItemProvider(this);
		}

		return portDeclarationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortMapsTypeItemProvider portMapsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortMapsTypeAdapter() {
		if (portMapsTypeItemProvider == null) {
			portMapsTypeItemProvider = new PortMapsTypeItemProvider(this);
		}

		return portMapsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortMapsType1ItemProvider portMapsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortMapsType1Adapter() {
		if (portMapsType1ItemProvider == null) {
			portMapsType1ItemProvider = new PortMapsType1ItemProvider(this);
		}

		return portMapsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortMapTypeItemProvider portMapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortMapTypeAdapter() {
		if (portMapTypeItemProvider == null) {
			portMapTypeItemProvider = new PortMapTypeItemProvider(this);
		}

		return portMapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortMapType1ItemProvider portMapType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortMapType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortMapType1Adapter() {
		if (portMapType1ItemProvider == null) {
			portMapType1ItemProvider = new PortMapType1ItemProvider(this);
		}

		return portMapType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortsTypeItemProvider portsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortsTypeAdapter() {
		if (portsTypeItemProvider == null) {
			portsTypeItemProvider = new PortsTypeItemProvider(this);
		}

		return portsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortsType1ItemProvider portsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortsType1Adapter() {
		if (portsType1ItemProvider == null) {
			portsType1ItemProvider = new PortsType1ItemProvider(this);
		}

		return portsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortsType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortsType2ItemProvider portsType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortsType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortsType2Adapter() {
		if (portsType2ItemProvider == null) {
			portsType2ItemProvider = new PortsType2ItemProvider(this);
		}

		return portsType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortTransactionalType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTransactionalTypeItemProvider portTransactionalTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortTransactionalType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortTransactionalTypeAdapter() {
		if (portTransactionalTypeItemProvider == null) {
			portTransactionalTypeItemProvider = new PortTransactionalTypeItemProvider(this);
		}

		return portTransactionalTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortTypeItemProvider portTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortTypeAdapter() {
		if (portTypeItemProvider == null) {
			portTypeItemProvider = new PortTypeItemProvider(this);
		}

		return portTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortType1ItemProvider portType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortType1Adapter() {
		if (portType1ItemProvider == null) {
			portType1ItemProvider = new PortType1ItemProvider(this);
		}

		return portType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.PortWireType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortWireTypeItemProvider portWireTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.PortWireType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createPortWireTypeAdapter() {
		if (portWireTypeItemProvider == null) {
			portWireTypeItemProvider = new PortWireTypeItemProvider(this);
		}

		return portWireTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.QualifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualifierTypeItemProvider qualifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.QualifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createQualifierTypeAdapter() {
		if (qualifierTypeItemProvider == null) {
			qualifierTypeItemProvider = new QualifierTypeItemProvider(this);
		}

		return qualifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.QualifierType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QualifierType1ItemProvider qualifierType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.QualifierType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createQualifierType1Adapter() {
		if (qualifierType1ItemProvider == null) {
			qualifierType1ItemProvider = new QualifierType1ItemProvider(this);
		}

		return qualifierType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeTypeItemProvider rangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRangeTypeAdapter() {
		if (rangeTypeItemProvider == null) {
			rangeTypeItemProvider = new RangeTypeItemProvider(this);
		}

		return rangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeType1ItemProvider rangeType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRangeType1Adapter() {
		if (rangeType1ItemProvider == null) {
			rangeType1ItemProvider = new RangeType1ItemProvider(this);
		}

		return rangeType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeType2ItemProvider rangeType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRangeType2Adapter() {
		if (rangeType2ItemProvider == null) {
			rangeType2ItemProvider = new RangeType2ItemProvider(this);
		}

		return rangeType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeType3ItemProvider rangeType3ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RangeType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRangeType3Adapter() {
		if (rangeType3ItemProvider == null) {
			rangeType3ItemProvider = new RangeType3ItemProvider(this);
		}

		return rangeType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RegisterFileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegisterFileTypeItemProvider registerFileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RegisterFileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRegisterFileTypeAdapter() {
		if (registerFileTypeItemProvider == null) {
			registerFileTypeItemProvider = new RegisterFileTypeItemProvider(this);
		}

		return registerFileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RegisterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RegisterTypeItemProvider registerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RegisterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRegisterTypeAdapter() {
		if (registerTypeItemProvider == null) {
			registerTypeItemProvider = new RegisterTypeItemProvider(this);
		}

		return registerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapAddressType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemapAddressTypeItemProvider remapAddressTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapAddressType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRemapAddressTypeAdapter() {
		if (remapAddressTypeItemProvider == null) {
			remapAddressTypeItemProvider = new RemapAddressTypeItemProvider(this);
		}

		return remapAddressTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapPortsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemapPortsTypeItemProvider remapPortsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapPortsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRemapPortsTypeAdapter() {
		if (remapPortsTypeItemProvider == null) {
			remapPortsTypeItemProvider = new RemapPortsTypeItemProvider(this);
		}

		return remapPortsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapPortType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemapPortTypeItemProvider remapPortTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapPortType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRemapPortTypeAdapter() {
		if (remapPortTypeItemProvider == null) {
			remapPortTypeItemProvider = new RemapPortTypeItemProvider(this);
		}

		return remapPortTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapStatesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemapStatesTypeItemProvider remapStatesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapStatesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRemapStatesTypeAdapter() {
		if (remapStatesTypeItemProvider == null) {
			remapStatesTypeItemProvider = new RemapStatesTypeItemProvider(this);
		}

		return remapStatesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapStateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RemapStateTypeItemProvider remapStateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RemapStateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRemapStateTypeAdapter() {
		if (remapStateTypeItemProvider == null) {
			remapStateTypeItemProvider = new RemapStateTypeItemProvider(this);
		}

		return remapStateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ReplaceDefaultFlagsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplaceDefaultFlagsTypeItemProvider replaceDefaultFlagsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ReplaceDefaultFlagsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createReplaceDefaultFlagsTypeAdapter() {
		if (replaceDefaultFlagsTypeItemProvider == null) {
			replaceDefaultFlagsTypeItemProvider = new ReplaceDefaultFlagsTypeItemProvider(this);
		}

		return replaceDefaultFlagsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ReplaceDefaultFlagsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplaceDefaultFlagsType1ItemProvider replaceDefaultFlagsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ReplaceDefaultFlagsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createReplaceDefaultFlagsType1Adapter() {
		if (replaceDefaultFlagsType1ItemProvider == null) {
			replaceDefaultFlagsType1ItemProvider = new ReplaceDefaultFlagsType1ItemProvider(this);
		}

		return replaceDefaultFlagsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ReplaceDefaultFlagsType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplaceDefaultFlagsType2ItemProvider replaceDefaultFlagsType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ReplaceDefaultFlagsType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createReplaceDefaultFlagsType2Adapter() {
		if (replaceDefaultFlagsType2ItemProvider == null) {
			replaceDefaultFlagsType2ItemProvider = new ReplaceDefaultFlagsType2ItemProvider(this);
		}

		return replaceDefaultFlagsType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RequiresDriverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiresDriverTypeItemProvider requiresDriverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RequiresDriverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRequiresDriverTypeAdapter() {
		if (requiresDriverTypeItemProvider == null) {
			requiresDriverTypeItemProvider = new RequiresDriverTypeItemProvider(this);
		}

		return requiresDriverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ResetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResetTypeItemProvider resetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ResetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createResetTypeAdapter() {
		if (resetTypeItemProvider == null) {
			resetTypeItemProvider = new ResetTypeItemProvider(this);
		}

		return resetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ResetType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResetType1ItemProvider resetType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ResetType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createResetType1Adapter() {
		if (resetType1ItemProvider == null) {
			resetType1ItemProvider = new ResetType1ItemProvider(this);
		}

		return resetType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ResolvedLibraryRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResolvedLibraryRefTypeItemProvider resolvedLibraryRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ResolvedLibraryRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createResolvedLibraryRefTypeAdapter() {
		if (resolvedLibraryRefTypeItemProvider == null) {
			resolvedLibraryRefTypeItemProvider = new ResolvedLibraryRefTypeItemProvider(this);
		}

		return resolvedLibraryRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightTypeItemProvider rightTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRightTypeAdapter() {
		if (rightTypeItemProvider == null) {
			rightTypeItemProvider = new RightTypeItemProvider(this);
		}

		return rightTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightType1ItemProvider rightType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRightType1Adapter() {
		if (rightType1ItemProvider == null) {
			rightType1ItemProvider = new RightType1ItemProvider(this);
		}

		return rightType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightType2ItemProvider rightType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRightType2Adapter() {
		if (rightType2ItemProvider == null) {
			rightType2ItemProvider = new RightType2ItemProvider(this);
		}

		return rightType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType11} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RightType11ItemProvider rightType11ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.RightType11}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createRightType11Adapter() {
		if (rightType11ItemProvider == null) {
			rightType11ItemProvider = new RightType11ItemProvider(this);
		}

		return rightType11ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SegmentsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SegmentsTypeItemProvider segmentsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SegmentsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSegmentsTypeAdapter() {
		if (segmentsTypeItemProvider == null) {
			segmentsTypeItemProvider = new SegmentsTypeItemProvider(this);
		}

		return segmentsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SegmentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SegmentTypeItemProvider segmentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SegmentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSegmentTypeAdapter() {
		if (segmentTypeItemProvider == null) {
			segmentTypeItemProvider = new SegmentTypeItemProvider(this);
		}

		return segmentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTypeItemProvider serviceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createServiceTypeAdapter() {
		if (serviceTypeItemProvider == null) {
			serviceTypeItemProvider = new ServiceTypeItemProvider(this);
		}

		return serviceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceType1ItemProvider serviceType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createServiceType1Adapter() {
		if (serviceType1ItemProvider == null) {
			serviceType1ItemProvider = new ServiceType1ItemProvider(this);
		}

		return serviceType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceTypeDefsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTypeDefsTypeItemProvider serviceTypeDefsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceTypeDefsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createServiceTypeDefsTypeAdapter() {
		if (serviceTypeDefsTypeItemProvider == null) {
			serviceTypeDefsTypeItemProvider = new ServiceTypeDefsTypeItemProvider(this);
		}

		return serviceTypeDefsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceTypeDefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTypeDefTypeItemProvider serviceTypeDefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ServiceTypeDefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createServiceTypeDefTypeAdapter() {
		if (serviceTypeDefTypeItemProvider == null) {
			serviceTypeDefTypeItemProvider = new ServiceTypeDefTypeItemProvider(this);
		}

		return serviceTypeDefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotDriverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleShotDriverTypeItemProvider singleShotDriverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotDriverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSingleShotDriverTypeAdapter() {
		if (singleShotDriverTypeItemProvider == null) {
			singleShotDriverTypeItemProvider = new SingleShotDriverTypeItemProvider(this);
		}

		return singleShotDriverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotDurationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleShotDurationTypeItemProvider singleShotDurationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotDurationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSingleShotDurationTypeAdapter() {
		if (singleShotDurationTypeItemProvider == null) {
			singleShotDurationTypeItemProvider = new SingleShotDurationTypeItemProvider(this);
		}

		return singleShotDurationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotOffsetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleShotOffsetTypeItemProvider singleShotOffsetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotOffsetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSingleShotOffsetTypeAdapter() {
		if (singleShotOffsetTypeItemProvider == null) {
			singleShotOffsetTypeItemProvider = new SingleShotOffsetTypeItemProvider(this);
		}

		return singleShotOffsetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleShotValueTypeItemProvider singleShotValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SingleShotValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSingleShotValueTypeAdapter() {
		if (singleShotValueTypeItemProvider == null) {
			singleShotValueTypeItemProvider = new SingleShotValueTypeItemProvider(this);
		}

		return singleShotValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SizeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SizeTypeItemProvider sizeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SizeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSizeTypeAdapter() {
		if (sizeTypeItemProvider == null) {
			sizeTypeItemProvider = new SizeTypeItemProvider(this);
		}

		return sizeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SlaveType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SlaveTypeItemProvider slaveTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SlaveType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSlaveTypeAdapter() {
		if (slaveTypeItemProvider == null) {
			slaveTypeItemProvider = new SlaveTypeItemProvider(this);
		}

		return slaveTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SourceFileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceFileTypeItemProvider sourceFileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SourceFileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSourceFileTypeAdapter() {
		if (sourceFileTypeItemProvider == null) {
			sourceFileTypeItemProvider = new SourceFileTypeItemProvider(this);
		}

		return sourceFileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SourceNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceNameTypeItemProvider sourceNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SourceNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSourceNameTypeAdapter() {
		if (sourceNameTypeItemProvider == null) {
			sourceNameTypeItemProvider = new SourceNameTypeItemProvider(this);
		}

		return sourceNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SubspaceRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubspaceRefTypeItemProvider subspaceRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SubspaceRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSubspaceRefTypeAdapter() {
		if (subspaceRefTypeItemProvider == null) {
			subspaceRefTypeItemProvider = new SubspaceRefTypeItemProvider(this);
		}

		return subspaceRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SystemGroupNamesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemGroupNamesTypeItemProvider systemGroupNamesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SystemGroupNamesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSystemGroupNamesTypeAdapter() {
		if (systemGroupNamesTypeItemProvider == null) {
			systemGroupNamesTypeItemProvider = new SystemGroupNamesTypeItemProvider(this);
		}

		return systemGroupNamesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.SystemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemTypeItemProvider systemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.SystemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createSystemTypeAdapter() {
		if (systemTypeItemProvider == null) {
			systemTypeItemProvider = new SystemTypeItemProvider(this);
		}

		return systemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TargetNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetNameTypeItemProvider targetNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TargetNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTargetNameTypeAdapter() {
		if (targetNameTypeItemProvider == null) {
			targetNameTypeItemProvider = new TargetNameTypeItemProvider(this);
		}

		return targetNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TestableType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TestableTypeItemProvider testableTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TestableType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTestableTypeAdapter() {
		if (testableTypeItemProvider == null) {
			testableTypeItemProvider = new TestableTypeItemProvider(this);
		}

		return testableTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TimingConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimingConstraintTypeItemProvider timingConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TimingConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTimingConstraintTypeAdapter() {
		if (timingConstraintTypeItemProvider == null) {
			timingConstraintTypeItemProvider = new TimingConstraintTypeItemProvider(this);
		}

		return timingConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TransactionalType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransactionalTypeItemProvider transactionalTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TransactionalType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTransactionalTypeAdapter() {
		if (transactionalTypeItemProvider == null) {
			transactionalTypeItemProvider = new TransactionalTypeItemProvider(this);
		}

		return transactionalTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TransportMethodsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransportMethodsTypeItemProvider transportMethodsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TransportMethodsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTransportMethodsTypeAdapter() {
		if (transportMethodsTypeItemProvider == null) {
			transportMethodsTypeItemProvider = new TransportMethodsTypeItemProvider(this);
		}

		return transportMethodsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TransTypeDefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransTypeDefTypeItemProvider transTypeDefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TransTypeDefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTransTypeDefTypeAdapter() {
		if (transTypeDefTypeItemProvider == null) {
			transTypeDefTypeItemProvider = new TransTypeDefTypeItemProvider(this);
		}

		return transTypeDefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeNameTypeItemProvider typeNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTypeNameTypeAdapter() {
		if (typeNameTypeItemProvider == null) {
			typeNameTypeItemProvider = new TypeNameTypeItemProvider(this);
		}

		return typeNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeNameType1ItemProvider typeNameType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTypeNameType1Adapter() {
		if (typeNameType1ItemProvider == null) {
			typeNameType1ItemProvider = new TypeNameType1ItemProvider(this);
		}

		return typeNameType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeNameType2ItemProvider typeNameType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTypeNameType2Adapter() {
		if (typeNameType2ItemProvider == null) {
			typeNameType2ItemProvider = new TypeNameType2ItemProvider(this);
		}

		return typeNameType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeNameType3ItemProvider typeNameType3ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.TypeNameType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createTypeNameType3Adapter() {
		if (typeNameType3ItemProvider == null) {
			typeNameType3ItemProvider = new TypeNameType3ItemProvider(this);
		}

		return typeNameType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueMaskConfigType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueMaskConfigTypeItemProvider valueMaskConfigTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueMaskConfigType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createValueMaskConfigTypeAdapter() {
		if (valueMaskConfigTypeItemProvider == null) {
			valueMaskConfigTypeItemProvider = new ValueMaskConfigTypeItemProvider(this);
		}

		return valueMaskConfigTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeItemProvider valueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createValueTypeAdapter() {
		if (valueTypeItemProvider == null) {
			valueTypeItemProvider = new ValueTypeItemProvider(this);
		}

		return valueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueType1ItemProvider valueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createValueType1Adapter() {
		if (valueType1ItemProvider == null) {
			valueType1ItemProvider = new ValueType1ItemProvider(this);
		}

		return valueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueType2ItemProvider valueType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ValueType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createValueType2Adapter() {
		if (valueType2ItemProvider == null) {
			valueType2ItemProvider = new ValueType2ItemProvider(this);
		}

		return valueType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VectorTypeItemProvider vectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createVectorTypeAdapter() {
		if (vectorTypeItemProvider == null) {
			vectorTypeItemProvider = new VectorTypeItemProvider(this);
		}

		return vectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VectorType1ItemProvider vectorType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createVectorType1Adapter() {
		if (vectorType1ItemProvider == null) {
			vectorType1ItemProvider = new VectorType1ItemProvider(this);
		}

		return vectorType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VectorType2ItemProvider vectorType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createVectorType2Adapter() {
		if (vectorType2ItemProvider == null) {
			vectorType2ItemProvider = new VectorType2ItemProvider(this);
		}

		return vectorType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType11} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VectorType11ItemProvider vectorType11ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.VectorType11}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createVectorType11Adapter() {
		if (vectorType11ItemProvider == null) {
			vectorType11ItemProvider = new VectorType11ItemProvider(this);
		}

		return vectorType11ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.VendorExtensionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VendorExtensionsTypeItemProvider vendorExtensionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.VendorExtensionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createVendorExtensionsTypeAdapter() {
		if (vendorExtensionsTypeItemProvider == null) {
			vendorExtensionsTypeItemProvider = new VendorExtensionsTypeItemProvider(this);
		}

		return vendorExtensionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewConfigurationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewConfigurationTypeItemProvider viewConfigurationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewConfigurationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createViewConfigurationTypeAdapter() {
		if (viewConfigurationTypeItemProvider == null) {
			viewConfigurationTypeItemProvider = new ViewConfigurationTypeItemProvider(this);
		}

		return viewConfigurationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewsTypeItemProvider viewsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createViewsTypeAdapter() {
		if (viewsTypeItemProvider == null) {
			viewsTypeItemProvider = new ViewsTypeItemProvider(this);
		}

		return viewsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewsType1ItemProvider viewsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createViewsType1Adapter() {
		if (viewsType1ItemProvider == null) {
			viewsType1ItemProvider = new ViewsType1ItemProvider(this);
		}

		return viewsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewTypeItemProvider viewTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.ViewType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createViewTypeAdapter() {
		if (viewTypeItemProvider == null) {
			viewTypeItemProvider = new ViewTypeItemProvider(this);
		}

		return viewTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementRefsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhiteboxElementRefsTypeItemProvider whiteboxElementRefsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementRefsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWhiteboxElementRefsTypeAdapter() {
		if (whiteboxElementRefsTypeItemProvider == null) {
			whiteboxElementRefsTypeItemProvider = new WhiteboxElementRefsTypeItemProvider(this);
		}

		return whiteboxElementRefsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhiteboxElementRefTypeItemProvider whiteboxElementRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWhiteboxElementRefTypeAdapter() {
		if (whiteboxElementRefTypeItemProvider == null) {
			whiteboxElementRefTypeItemProvider = new WhiteboxElementRefTypeItemProvider(this);
		}

		return whiteboxElementRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhiteboxElementsTypeItemProvider whiteboxElementsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWhiteboxElementsTypeAdapter() {
		if (whiteboxElementsTypeItemProvider == null) {
			whiteboxElementsTypeItemProvider = new WhiteboxElementsTypeItemProvider(this);
		}

		return whiteboxElementsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhiteboxElementTypeItemProvider whiteboxElementTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxElementType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWhiteboxElementTypeAdapter() {
		if (whiteboxElementTypeItemProvider == null) {
			whiteboxElementTypeItemProvider = new WhiteboxElementTypeItemProvider(this);
		}

		return whiteboxElementTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxPathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhiteboxPathTypeItemProvider whiteboxPathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WhiteboxPathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWhiteboxPathTypeAdapter() {
		if (whiteboxPathTypeItemProvider == null) {
			whiteboxPathTypeItemProvider = new WhiteboxPathTypeItemProvider(this);
		}

		return whiteboxPathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WidthType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidthTypeItemProvider widthTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WidthType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWidthTypeAdapter() {
		if (widthTypeItemProvider == null) {
			widthTypeItemProvider = new WidthTypeItemProvider(this);
		}

		return widthTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WireType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WireTypeItemProvider wireTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WireType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWireTypeAdapter() {
		if (wireTypeItemProvider == null) {
			wireTypeItemProvider = new WireTypeItemProvider(this);
		}

		return wireTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WireTypeDefsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WireTypeDefsTypeItemProvider wireTypeDefsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WireTypeDefsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWireTypeDefsTypeAdapter() {
		if (wireTypeDefsTypeItemProvider == null) {
			wireTypeDefsTypeItemProvider = new WireTypeDefsTypeItemProvider(this);
		}

		return wireTypeDefsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WireTypeDefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WireTypeDefTypeItemProvider wireTypeDefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WireTypeDefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWireTypeDefTypeAdapter() {
		if (wireTypeDefTypeItemProvider == null) {
			wireTypeDefTypeItemProvider = new WireTypeDefTypeItemProvider(this);
		}

		return wireTypeDefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.spiritconsortium.xml.schema.spirit.spirit.WriteValueConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WriteValueConstraintTypeItemProvider writeValueConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.spiritconsortium.xml.schema.spirit.spirit.WriteValueConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createWriteValueConstraintTypeAdapter() {
		if (writeValueConstraintTypeItemProvider == null) {
			writeValueConstraintTypeItemProvider = new WriteValueConstraintTypeItemProvider(this);
		}

		return writeValueConstraintTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (abstractionDefinitionTypeItemProvider != null) abstractionDefinitionTypeItemProvider.dispose();
		if (abstractionDefPortConstraintsTypeItemProvider != null) abstractionDefPortConstraintsTypeItemProvider.dispose();
		if (abstractorBusInterfaceTypeItemProvider != null) abstractorBusInterfaceTypeItemProvider.dispose();
		if (abstractorGeneratorsTypeItemProvider != null) abstractorGeneratorsTypeItemProvider.dispose();
		if (abstractorInterfacesTypeItemProvider != null) abstractorInterfacesTypeItemProvider.dispose();
		if (abstractorModelTypeItemProvider != null) abstractorModelTypeItemProvider.dispose();
		if (abstractorModeType1ItemProvider != null) abstractorModeType1ItemProvider.dispose();
		if (abstractorPortTypeItemProvider != null) abstractorPortTypeItemProvider.dispose();
		if (abstractorPortWireTypeItemProvider != null) abstractorPortWireTypeItemProvider.dispose();
		if (abstractorsTypeItemProvider != null) abstractorsTypeItemProvider.dispose();
		if (abstractorTypeItemProvider != null) abstractorTypeItemProvider.dispose();
		if (abstractorType1ItemProvider != null) abstractorType1ItemProvider.dispose();
		if (abstractorViewTypeItemProvider != null) abstractorViewTypeItemProvider.dispose();
		if (addressBankTypeItemProvider != null) addressBankTypeItemProvider.dispose();
		if (addressBlockTypeItemProvider != null) addressBlockTypeItemProvider.dispose();
		if (addressOffsetTypeItemProvider != null) addressOffsetTypeItemProvider.dispose();
		if (addressSpaceRefTypeItemProvider != null) addressSpaceRefTypeItemProvider.dispose();
		if (addressSpacesTypeItemProvider != null) addressSpacesTypeItemProvider.dispose();
		if (addressSpaceTypeItemProvider != null) addressSpaceTypeItemProvider.dispose();
		if (addrSpaceRefTypeItemProvider != null) addrSpaceRefTypeItemProvider.dispose();
		if (adHocConnectionsTypeItemProvider != null) adHocConnectionsTypeItemProvider.dispose();
		if (adHocConnectionTypeItemProvider != null) adHocConnectionTypeItemProvider.dispose();
		if (alternateGroupsTypeItemProvider != null) alternateGroupsTypeItemProvider.dispose();
		if (alternateRegistersTypeItemProvider != null) alternateRegistersTypeItemProvider.dispose();
		if (alternateRegisterTypeItemProvider != null) alternateRegisterTypeItemProvider.dispose();
		if (argumentTypeItemProvider != null) argumentTypeItemProvider.dispose();
		if (bankedBankTypeItemProvider != null) bankedBankTypeItemProvider.dispose();
		if (bankedBlockTypeItemProvider != null) bankedBlockTypeItemProvider.dispose();
		if (bankedSubspaceTypeItemProvider != null) bankedSubspaceTypeItemProvider.dispose();
		if (baseAddressesTypeItemProvider != null) baseAddressesTypeItemProvider.dispose();
		if (baseAddressTypeItemProvider != null) baseAddressTypeItemProvider.dispose();
		if (baseAddressType1ItemProvider != null) baseAddressType1ItemProvider.dispose();
		if (bitSteeringType1ItemProvider != null) bitSteeringType1ItemProvider.dispose();
		if (bitWidthTypeItemProvider != null) bitWidthTypeItemProvider.dispose();
		if (bridgeTypeItemProvider != null) bridgeTypeItemProvider.dispose();
		if (buildCommandTypeItemProvider != null) buildCommandTypeItemProvider.dispose();
		if (busDefinitionTypeItemProvider != null) busDefinitionTypeItemProvider.dispose();
		if (busInterfacesTypeItemProvider != null) busInterfacesTypeItemProvider.dispose();
		if (busInterfaceTypeItemProvider != null) busInterfaceTypeItemProvider.dispose();
		if (cellClassTypeItemProvider != null) cellClassTypeItemProvider.dispose();
		if (cellFunctionTypeItemProvider != null) cellFunctionTypeItemProvider.dispose();
		if (cellSpecificationTypeItemProvider != null) cellSpecificationTypeItemProvider.dispose();
		if (channelsTypeItemProvider != null) channelsTypeItemProvider.dispose();
		if (channelTypeItemProvider != null) channelTypeItemProvider.dispose();
		if (choicesTypeItemProvider != null) choicesTypeItemProvider.dispose();
		if (choiceTypeItemProvider != null) choiceTypeItemProvider.dispose();
		if (clockDriverTypeItemProvider != null) clockDriverTypeItemProvider.dispose();
		if (clockDriverType1ItemProvider != null) clockDriverType1ItemProvider.dispose();
		if (clockPeriodTypeItemProvider != null) clockPeriodTypeItemProvider.dispose();
		if (clockPulseDurationTypeItemProvider != null) clockPulseDurationTypeItemProvider.dispose();
		if (clockPulseOffsetTypeItemProvider != null) clockPulseOffsetTypeItemProvider.dispose();
		if (clockPulseValueTypeItemProvider != null) clockPulseValueTypeItemProvider.dispose();
		if (commandLineSwitchTypeItemProvider != null) commandLineSwitchTypeItemProvider.dispose();
		if (commandTypeItemProvider != null) commandTypeItemProvider.dispose();
		if (commandType1ItemProvider != null) commandType1ItemProvider.dispose();
		if (commandType2ItemProvider != null) commandType2ItemProvider.dispose();
		if (componentGeneratorsTypeItemProvider != null) componentGeneratorsTypeItemProvider.dispose();
		if (componentGeneratorTypeItemProvider != null) componentGeneratorTypeItemProvider.dispose();
		if (componentInstancesTypeItemProvider != null) componentInstancesTypeItemProvider.dispose();
		if (componentInstanceTypeItemProvider != null) componentInstanceTypeItemProvider.dispose();
		if (componentTypeItemProvider != null) componentTypeItemProvider.dispose();
		if (configurableElementValuesTypeItemProvider != null) configurableElementValuesTypeItemProvider.dispose();
		if (configurableElementValueTypeItemProvider != null) configurableElementValueTypeItemProvider.dispose();
		if (connectionTypeItemProvider != null) connectionTypeItemProvider.dispose();
		if (constraintSetsTypeItemProvider != null) constraintSetsTypeItemProvider.dispose();
		if (constraintSetTypeItemProvider != null) constraintSetTypeItemProvider.dispose();
		if (cpusTypeItemProvider != null) cpusTypeItemProvider.dispose();
		if (cpuTypeItemProvider != null) cpuTypeItemProvider.dispose();
		if (defaultValueTypeItemProvider != null) defaultValueTypeItemProvider.dispose();
		if (designConfigurationTypeItemProvider != null) designConfigurationTypeItemProvider.dispose();
		if (designTypeItemProvider != null) designTypeItemProvider.dispose();
		if (disabledTypeItemProvider != null) disabledTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (driveConstraintTypeItemProvider != null) driveConstraintTypeItemProvider.dispose();
		if (driverTypeItemProvider != null) driverTypeItemProvider.dispose();
		if (enableTypeItemProvider != null) enableTypeItemProvider.dispose();
		if (enumeratedValuesTypeItemProvider != null) enumeratedValuesTypeItemProvider.dispose();
		if (enumeratedValueTypeItemProvider != null) enumeratedValueTypeItemProvider.dispose();
		if (enumerationTypeItemProvider != null) enumerationTypeItemProvider.dispose();
		if (executableImageTypeItemProvider != null) executableImageTypeItemProvider.dispose();
		if (externalPortReferenceTypeItemProvider != null) externalPortReferenceTypeItemProvider.dispose();
		if (fieldTypeItemProvider != null) fieldTypeItemProvider.dispose();
		if (fileBuilderTypeItemProvider != null) fileBuilderTypeItemProvider.dispose();
		if (fileBuilderType1ItemProvider != null) fileBuilderType1ItemProvider.dispose();
		if (fileSetRefGroupTypeItemProvider != null) fileSetRefGroupTypeItemProvider.dispose();
		if (fileSetRefGroupType1ItemProvider != null) fileSetRefGroupType1ItemProvider.dispose();
		if (fileSetRefTypeItemProvider != null) fileSetRefTypeItemProvider.dispose();
		if (fileSetsTypeItemProvider != null) fileSetsTypeItemProvider.dispose();
		if (fileSetTypeItemProvider != null) fileSetTypeItemProvider.dispose();
		if (fileTypeItemProvider != null) fileTypeItemProvider.dispose();
		if (flagsTypeItemProvider != null) flagsTypeItemProvider.dispose();
		if (flagsType1ItemProvider != null) flagsType1ItemProvider.dispose();
		if (flagsType2ItemProvider != null) flagsType2ItemProvider.dispose();
		if (functionTypeItemProvider != null) functionTypeItemProvider.dispose();
		if (generatorChainConfigurationTypeItemProvider != null) generatorChainConfigurationTypeItemProvider.dispose();
		if (generatorChainSelectorTypeItemProvider != null) generatorChainSelectorTypeItemProvider.dispose();
		if (generatorChainTypeItemProvider != null) generatorChainTypeItemProvider.dispose();
		if (generatorSelectorTypeItemProvider != null) generatorSelectorTypeItemProvider.dispose();
		if (generatorTypeItemProvider != null) generatorTypeItemProvider.dispose();
		if (generatorType1ItemProvider != null) generatorType1ItemProvider.dispose();
		if (groupSelectorTypeItemProvider != null) groupSelectorTypeItemProvider.dispose();
		if (hierConnectionsTypeItemProvider != null) hierConnectionsTypeItemProvider.dispose();
		if (hierConnectionTypeItemProvider != null) hierConnectionTypeItemProvider.dispose();
		if (hierInterfaceItemProvider != null) hierInterfaceItemProvider.dispose();
		if (instanceGeneratorTypeItemProvider != null) instanceGeneratorTypeItemProvider.dispose();
		if (interconnectionConfigurationTypeItemProvider != null) interconnectionConfigurationTypeItemProvider.dispose();
		if (interconnectionsTypeItemProvider != null) interconnectionsTypeItemProvider.dispose();
		if (interconnectionTypeItemProvider != null) interconnectionTypeItemProvider.dispose();
		if (interfaceItemProvider != null) interfaceItemProvider.dispose();
		if (internalPortReferenceTypeItemProvider != null) internalPortReferenceTypeItemProvider.dispose();
		if (isIncludeFileTypeItemProvider != null) isIncludeFileTypeItemProvider.dispose();
		if (languageToolsTypeItemProvider != null) languageToolsTypeItemProvider.dispose();
		if (languageTypeItemProvider != null) languageTypeItemProvider.dispose();
		if (languageType1ItemProvider != null) languageType1ItemProvider.dispose();
		if (leftTypeItemProvider != null) leftTypeItemProvider.dispose();
		if (leftType1ItemProvider != null) leftType1ItemProvider.dispose();
		if (leftType2ItemProvider != null) leftType2ItemProvider.dispose();
		if (leftType11ItemProvider != null) leftType11ItemProvider.dispose();
		if (libraryRefTypeItemProvider != null) libraryRefTypeItemProvider.dispose();
		if (linkerCommandFileTypeItemProvider != null) linkerCommandFileTypeItemProvider.dispose();
		if (linkerFlagsTypeItemProvider != null) linkerFlagsTypeItemProvider.dispose();
		if (linkerTypeItemProvider != null) linkerTypeItemProvider.dispose();
		if (loadConstraintTypeItemProvider != null) loadConstraintTypeItemProvider.dispose();
		if (localMemoryMapTypeItemProvider != null) localMemoryMapTypeItemProvider.dispose();
		if (logicalNameTypeItemProvider != null) logicalNameTypeItemProvider.dispose();
		if (logicalPortTypeItemProvider != null) logicalPortTypeItemProvider.dispose();
		if (logicalPortType1ItemProvider != null) logicalPortType1ItemProvider.dispose();
		if (maskTypeItemProvider != null) maskTypeItemProvider.dispose();
		if (maskType1ItemProvider != null) maskType1ItemProvider.dispose();
		if (masterTypeItemProvider != null) masterTypeItemProvider.dispose();
		if (maximumTypeItemProvider != null) maximumTypeItemProvider.dispose();
		if (memoryMapRefTypeItemProvider != null) memoryMapRefTypeItemProvider.dispose();
		if (memoryMapsTypeItemProvider != null) memoryMapsTypeItemProvider.dispose();
		if (memoryMapTypeItemProvider != null) memoryMapTypeItemProvider.dispose();
		if (memoryRemapTypeItemProvider != null) memoryRemapTypeItemProvider.dispose();
		if (minimumTypeItemProvider != null) minimumTypeItemProvider.dispose();
		if (mirroredMasterTypeItemProvider != null) mirroredMasterTypeItemProvider.dispose();
		if (mirroredSlaveTypeItemProvider != null) mirroredSlaveTypeItemProvider.dispose();
		if (mirroredSystemTypeItemProvider != null) mirroredSystemTypeItemProvider.dispose();
		if (modelParametersTypeItemProvider != null) modelParametersTypeItemProvider.dispose();
		if (modelParametersType1ItemProvider != null) modelParametersType1ItemProvider.dispose();
		if (modelTypeItemProvider != null) modelTypeItemProvider.dispose();
		if (monitorInterconnectionTypeItemProvider != null) monitorInterconnectionTypeItemProvider.dispose();
		if (monitorTypeItemProvider != null) monitorTypeItemProvider.dispose();
		if (nameTypeItemProvider != null) nameTypeItemProvider.dispose();
		if (nameType1ItemProvider != null) nameType1ItemProvider.dispose();
		if (nameType2ItemProvider != null) nameType2ItemProvider.dispose();
		if (nameValuePairTypeItemProvider != null) nameValuePairTypeItemProvider.dispose();
		if (nameValueTypeTypeItemProvider != null) nameValueTypeTypeItemProvider.dispose();
		if (onMasterTypeItemProvider != null) onMasterTypeItemProvider.dispose();
		if (onMasterType1ItemProvider != null) onMasterType1ItemProvider.dispose();
		if (onSlaveTypeItemProvider != null) onSlaveTypeItemProvider.dispose();
		if (onSlaveType1ItemProvider != null) onSlaveType1ItemProvider.dispose();
		if (onSystemTypeItemProvider != null) onSystemTypeItemProvider.dispose();
		if (onSystemType1ItemProvider != null) onSystemType1ItemProvider.dispose();
		if (otherClockDriverTypeItemProvider != null) otherClockDriverTypeItemProvider.dispose();
		if (otherClocksItemProvider != null) otherClocksItemProvider.dispose();
		if (parametersTypeItemProvider != null) parametersTypeItemProvider.dispose();
		if (parametersType1ItemProvider != null) parametersType1ItemProvider.dispose();
		if (phaseTypeItemProvider != null) phaseTypeItemProvider.dispose();
		if (physicalPortTypeItemProvider != null) physicalPortTypeItemProvider.dispose();
		if (physicalPortType1ItemProvider != null) physicalPortType1ItemProvider.dispose();
		if (portAccessTypeItemProvider != null) portAccessTypeItemProvider.dispose();
		if (portDeclarationTypeItemProvider != null) portDeclarationTypeItemProvider.dispose();
		if (portMapsTypeItemProvider != null) portMapsTypeItemProvider.dispose();
		if (portMapsType1ItemProvider != null) portMapsType1ItemProvider.dispose();
		if (portMapTypeItemProvider != null) portMapTypeItemProvider.dispose();
		if (portMapType1ItemProvider != null) portMapType1ItemProvider.dispose();
		if (portsTypeItemProvider != null) portsTypeItemProvider.dispose();
		if (portsType1ItemProvider != null) portsType1ItemProvider.dispose();
		if (portsType2ItemProvider != null) portsType2ItemProvider.dispose();
		if (portTransactionalTypeItemProvider != null) portTransactionalTypeItemProvider.dispose();
		if (portTypeItemProvider != null) portTypeItemProvider.dispose();
		if (portType1ItemProvider != null) portType1ItemProvider.dispose();
		if (portWireTypeItemProvider != null) portWireTypeItemProvider.dispose();
		if (qualifierTypeItemProvider != null) qualifierTypeItemProvider.dispose();
		if (qualifierType1ItemProvider != null) qualifierType1ItemProvider.dispose();
		if (rangeTypeItemProvider != null) rangeTypeItemProvider.dispose();
		if (rangeType1ItemProvider != null) rangeType1ItemProvider.dispose();
		if (rangeType2ItemProvider != null) rangeType2ItemProvider.dispose();
		if (rangeType3ItemProvider != null) rangeType3ItemProvider.dispose();
		if (registerFileTypeItemProvider != null) registerFileTypeItemProvider.dispose();
		if (registerTypeItemProvider != null) registerTypeItemProvider.dispose();
		if (remapAddressTypeItemProvider != null) remapAddressTypeItemProvider.dispose();
		if (remapPortsTypeItemProvider != null) remapPortsTypeItemProvider.dispose();
		if (remapPortTypeItemProvider != null) remapPortTypeItemProvider.dispose();
		if (remapStatesTypeItemProvider != null) remapStatesTypeItemProvider.dispose();
		if (remapStateTypeItemProvider != null) remapStateTypeItemProvider.dispose();
		if (replaceDefaultFlagsTypeItemProvider != null) replaceDefaultFlagsTypeItemProvider.dispose();
		if (replaceDefaultFlagsType1ItemProvider != null) replaceDefaultFlagsType1ItemProvider.dispose();
		if (replaceDefaultFlagsType2ItemProvider != null) replaceDefaultFlagsType2ItemProvider.dispose();
		if (requiresDriverTypeItemProvider != null) requiresDriverTypeItemProvider.dispose();
		if (resetTypeItemProvider != null) resetTypeItemProvider.dispose();
		if (resetType1ItemProvider != null) resetType1ItemProvider.dispose();
		if (resolvedLibraryRefTypeItemProvider != null) resolvedLibraryRefTypeItemProvider.dispose();
		if (rightTypeItemProvider != null) rightTypeItemProvider.dispose();
		if (rightType1ItemProvider != null) rightType1ItemProvider.dispose();
		if (rightType2ItemProvider != null) rightType2ItemProvider.dispose();
		if (rightType11ItemProvider != null) rightType11ItemProvider.dispose();
		if (segmentsTypeItemProvider != null) segmentsTypeItemProvider.dispose();
		if (segmentTypeItemProvider != null) segmentTypeItemProvider.dispose();
		if (serviceTypeItemProvider != null) serviceTypeItemProvider.dispose();
		if (serviceType1ItemProvider != null) serviceType1ItemProvider.dispose();
		if (serviceTypeDefsTypeItemProvider != null) serviceTypeDefsTypeItemProvider.dispose();
		if (serviceTypeDefTypeItemProvider != null) serviceTypeDefTypeItemProvider.dispose();
		if (singleShotDriverTypeItemProvider != null) singleShotDriverTypeItemProvider.dispose();
		if (singleShotDurationTypeItemProvider != null) singleShotDurationTypeItemProvider.dispose();
		if (singleShotOffsetTypeItemProvider != null) singleShotOffsetTypeItemProvider.dispose();
		if (singleShotValueTypeItemProvider != null) singleShotValueTypeItemProvider.dispose();
		if (sizeTypeItemProvider != null) sizeTypeItemProvider.dispose();
		if (slaveTypeItemProvider != null) slaveTypeItemProvider.dispose();
		if (sourceFileTypeItemProvider != null) sourceFileTypeItemProvider.dispose();
		if (sourceNameTypeItemProvider != null) sourceNameTypeItemProvider.dispose();
		if (subspaceRefTypeItemProvider != null) subspaceRefTypeItemProvider.dispose();
		if (systemGroupNamesTypeItemProvider != null) systemGroupNamesTypeItemProvider.dispose();
		if (systemTypeItemProvider != null) systemTypeItemProvider.dispose();
		if (targetNameTypeItemProvider != null) targetNameTypeItemProvider.dispose();
		if (testableTypeItemProvider != null) testableTypeItemProvider.dispose();
		if (timingConstraintTypeItemProvider != null) timingConstraintTypeItemProvider.dispose();
		if (transactionalTypeItemProvider != null) transactionalTypeItemProvider.dispose();
		if (transportMethodsTypeItemProvider != null) transportMethodsTypeItemProvider.dispose();
		if (transTypeDefTypeItemProvider != null) transTypeDefTypeItemProvider.dispose();
		if (typeNameTypeItemProvider != null) typeNameTypeItemProvider.dispose();
		if (typeNameType1ItemProvider != null) typeNameType1ItemProvider.dispose();
		if (typeNameType2ItemProvider != null) typeNameType2ItemProvider.dispose();
		if (typeNameType3ItemProvider != null) typeNameType3ItemProvider.dispose();
		if (valueMaskConfigTypeItemProvider != null) valueMaskConfigTypeItemProvider.dispose();
		if (valueTypeItemProvider != null) valueTypeItemProvider.dispose();
		if (valueType1ItemProvider != null) valueType1ItemProvider.dispose();
		if (valueType2ItemProvider != null) valueType2ItemProvider.dispose();
		if (vectorTypeItemProvider != null) vectorTypeItemProvider.dispose();
		if (vectorType1ItemProvider != null) vectorType1ItemProvider.dispose();
		if (vectorType2ItemProvider != null) vectorType2ItemProvider.dispose();
		if (vectorType11ItemProvider != null) vectorType11ItemProvider.dispose();
		if (vendorExtensionsTypeItemProvider != null) vendorExtensionsTypeItemProvider.dispose();
		if (viewConfigurationTypeItemProvider != null) viewConfigurationTypeItemProvider.dispose();
		if (viewsTypeItemProvider != null) viewsTypeItemProvider.dispose();
		if (viewsType1ItemProvider != null) viewsType1ItemProvider.dispose();
		if (viewTypeItemProvider != null) viewTypeItemProvider.dispose();
		if (whiteboxElementRefsTypeItemProvider != null) whiteboxElementRefsTypeItemProvider.dispose();
		if (whiteboxElementRefTypeItemProvider != null) whiteboxElementRefTypeItemProvider.dispose();
		if (whiteboxElementsTypeItemProvider != null) whiteboxElementsTypeItemProvider.dispose();
		if (whiteboxElementTypeItemProvider != null) whiteboxElementTypeItemProvider.dispose();
		if (whiteboxPathTypeItemProvider != null) whiteboxPathTypeItemProvider.dispose();
		if (widthTypeItemProvider != null) widthTypeItemProvider.dispose();
		if (wireTypeItemProvider != null) wireTypeItemProvider.dispose();
		if (wireTypeDefsTypeItemProvider != null) wireTypeDefsTypeItemProvider.dispose();
		if (wireTypeDefTypeItemProvider != null) wireTypeDefTypeItemProvider.dispose();
		if (writeValueConstraintTypeItemProvider != null) writeValueConstraintTypeItemProvider.dispose();
	}

}
