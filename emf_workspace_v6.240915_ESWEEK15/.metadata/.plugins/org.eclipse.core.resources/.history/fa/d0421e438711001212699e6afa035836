package org.spiritconsortium.xml.schema.spirit.spirit.tests;

import java.io.File;
import java.io.IOException;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.util.BasicExtendedMetaData;
import org.eclipse.emf.ecore.util.ExtendedMetaData;
import org.eclipse.emf.ecore.xmi.XMLResource;
import org.eclipse.emf.ecore.xmi.impl.GenericXMLResourceFactoryImpl;

public class _MyEMFEdit {

	  /**
	   * When running this examle as an Eclipse project, 
	   * the current directory will be the root folder of the project.
	   */
	  public static final String WORKING_FOLDER;
	  static
	  {
	    String result = "."; 
	    try
	    {
	      result = new File(".").getCanonicalPath() + "/";
	    }
	    catch (Exception exception)
	    {
	    }
	    WORKING_FOLDER = result;
	  }
	  
	  /**
	   * We will store data files in the "data" subfolder of the project.
	   */
	  public static final String DATA_FOLDER = WORKING_FOLDER + "data/";
	  
	  

public static void main(String[] args) throws Exception
{
  //demonstrateDOMCreateAndSave();
  //demonstrateDOMLoadAndTraverse();
  //demonstateEMFDOMCreateAndSave();
  //demonstrateEMFDOMLoadAndTraverse();
  //demonstrateSchema();
  demonstrateDynamicSchemaLoad();
  //demonstrateStaticLoadAndTraverse();
  //demonstrateMultiResourceStaticLoadAndTraverse();
  //demonstrateEMFUsingFactory();
}

private static void demonstrateDynamicSchemaLoad() throws IOException {
	// TODO Auto-generated method stub
	System.out.println("EMF Dynamic Load Schema");
    
    // Set up the context as before.
    //
    ResourceSet resourceSet = new ResourceSetImpl();
    final ExtendedMetaData extendedMetaData = new BasicExtendedMetaData(resourceSet.getPackageRegistry());
    resourceSet.getLoadOptions().put(XMLResource.OPTION_EXTENDED_META_DATA, extendedMetaData);
    resourceSet.getResourceFactoryRegistry().getExtensionToFactoryMap().put
      (Resource.Factory.Registry.DEFAULT_EXTENSION, 
       new GenericXMLResourceFactoryImpl());
       
    // Load the example resource containing the xsi:schemaLocation,
    // and display what's loaded.
    //
    
    Resource resource = resourceSet.getResource(URI.createFileURI(DATA_FOLDER + "System.xml"), true);
    resource.save(System.out, null);
    System.out.println();
    
    System.out.println("Traversing EMF EObject");
    System.out.println(WORKING_FOLDER);
     
	
	
}


}
